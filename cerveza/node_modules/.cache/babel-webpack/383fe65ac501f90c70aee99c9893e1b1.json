{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport { InjectionToken, Component, NgModule } from '@angular/core';\nimport { bindCallback } from 'rxjs';\nimport { map } from 'rxjs/operators';\n/** @hidden */\n\nimport * as ɵngcc0 from '@angular/core';\nconst pathSDK = 'https://secure.mlstatic.com/sdk/javascript/v1/mercadopago.js';\n/** @hidden */\n\nconst ConfigToken = new InjectionToken('config');\n\nclass NgxMercadopagoService {\n  constructor(config) {\n    this.config = config;\n\n    if (!config.pathSDK) {\n      config.pathSDK = pathSDK;\n    }\n\n    this.initialized = false;\n  }\n\n  initialize(publishKey) {\n    return new Promise((resolve, reject) => {\n      const sdkMercadoPago = this.loadMPScript(this.config.pathSDK);\n\n      sdkMercadoPago.onload = () => {\n        this.initialized = true;\n        Mercadopago.setPublishableKey(publishKey || this.config.publishKey);\n        return resolve(Mercadopago);\n      };\n\n      sdkMercadoPago.onerror = error => reject(error);\n    });\n  }\n\n  loadMPScript(src) {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = src;\n    document.body.appendChild(script);\n    return script;\n  }\n\n  clearSession() {\n    return __awaiter(this, void 0, void 0, function* () {\n      Mercadopago.clearSession();\n    });\n  }\n\n  getPaymentMethod(card) {\n    return bindCallback(Mercadopago.getPaymentMethod)(card).pipe(map(([status, resp]) => {\n      if (status === 200) {\n        return {\n          status,\n          data: resp,\n          error: null\n        };\n      } else {\n        return {\n          status,\n          data: null,\n          error: resp\n        };\n      }\n    }));\n  }\n\n  getPaymentMethods() {\n    return Mercadopago.getPaymentMethods();\n  }\n\n  getIdentificationTypes() {\n    return bindCallback(Mercadopago.getIdentificationTypes)().pipe(map(([status, data]) => ({\n      status,\n      data\n    })));\n  }\n\n  getInstallments(card) {\n    return bindCallback(Mercadopago.getInstallments)(card).pipe(map(([status, resp]) => {\n      if (status === 200) {\n        return {\n          status,\n          data: resp,\n          error: null\n        };\n      } else {\n        return {\n          status,\n          data: null,\n          error: resp\n        };\n      }\n    }));\n  }\n\n  createToken(form) {\n    return bindCallback(Mercadopago.createToken)(form).pipe(map(([status, resp]) => {\n      if (status === 200) {\n        return {\n          status,\n          data: resp,\n          error: null\n        };\n      } else {\n        return {\n          status,\n          data: null,\n          error: resp\n        };\n      }\n    }));\n  }\n\n  validateExpiryDate(date) {\n    return Mercadopago.validateExpiryDate(date);\n  }\n\n  validateExpiryMonthYear(month, year) {\n    return Mercadopago.validateExpiryDate(month, year);\n  }\n\n}\n\nlet NgxMercadopagoComponent = /*#__PURE__*/(() => {\n  class NgxMercadopagoComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  NgxMercadopagoComponent.ɵfac = function NgxMercadopagoComponent_Factory(t) {\n    return new (t || NgxMercadopagoComponent)();\n  };\n\n  NgxMercadopagoComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgxMercadopagoComponent,\n    selectors: [[\"lib-ngx-mercadopago\"]],\n    decls: 2,\n    vars: 0,\n    template: function NgxMercadopagoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtext(1, \" ngx-mercadopago works! \");\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return NgxMercadopagoComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NgxMercadopagoModule = /*#__PURE__*/(() => {\n  class NgxMercadopagoModule {\n    static forRoot(libConfiguration) {\n      return {\n        ngModule: NgxMercadopagoModule,\n        providers: [{\n          provide: ConfigToken,\n          useValue: libConfiguration\n        }, {\n          provide: NgxMercadopagoService,\n          deps: [ConfigToken]\n        }]\n      };\n    }\n\n  }\n\n  NgxMercadopagoModule.ɵfac = function NgxMercadopagoModule_Factory(t) {\n    return new (t || NgxMercadopagoModule)();\n  };\n\n  NgxMercadopagoModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgxMercadopagoModule\n  });\n  NgxMercadopagoModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return NgxMercadopagoModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\r\n * Public API Surface of ngx-mercadopago\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { ConfigToken, NgxMercadopagoComponent, NgxMercadopagoModule, NgxMercadopagoService }; //# sourceMappingURL=ngx-mercadopago.js.map","map":null,"metadata":{},"sourceType":"module"}